name: Build Android APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Clean build
      run: ./gradlew clean
      
    - name: Build debug APK
      run: ./gradlew assembleDebug
      
    # Temporarily disable release build due to protobuf conflicts
    # - name: Build release APK
    #   run: ./gradlew assembleRelease
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    # - name: Upload release APK
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: release-apk
    #     path: app/build/outputs/apk/release/*.apk
    #     retention-days: 30

  # Deploy APK to releases on tag push (using debug for now)
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Clean build  
      run: ./gradlew clean
      
    - name: Build debug APK (temporary workaround)
      run: ./gradlew assembleDebug
      
    - name: Get APK path
      id: apk-path
      run: |
        APK_PATH=$(find app/build/outputs/apk/debug -name "*.apk" | head -1)
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "apk_name=$(basename $APK_PATH)" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this Release
          - Automated release created from tag ${{ github.ref_name }}
          
          ## Download
          Download the APK below and install on your Android device.
          
          **Note**: 
          - This is a debug build due to current protobuf conflicts in release builds
          - You may need to enable "Install from Unknown Sources" in your device settings
        draft: false
        prerelease: true  # Mark as prerelease since it's debug
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.apk-path.outputs.apk_path }}
        asset_name: grpc-treadmill-${{ github.ref_name }}-debug.apk
        asset_content_type: application/vnd.android.package-archive
